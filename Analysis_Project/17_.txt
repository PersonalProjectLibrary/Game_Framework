一、准备阶段：
1、打包时记录打包版本号和所有资源信息
（1）Version的写入
（2）ABMD5的二进制写入

2、Unity一键生成热更资源
对以往打包好的ABMD5的文件（byte格式）进行读取，对比当前打包出来的ABMD5文件，
筛选出不一样的文件生成热更包，拷贝到热更文件夹

3、热更包及配置表
根据本次热更包文件，生成对应的Patch配置表

4、服务器文件部署
把本次热更的Patch配置表信息，复制到服务器上的ServerInfo配置表里；
（ServerInfo的GameVersion下，新增本次Patches信息）

二、热更阶段：
HotPatchManager.ce里Mono接口初始化，使支持协程下载资源；

1、与本地存储配置表以及已下载文件进行对比
检查版本号CheckVersion：
（1）检查玩家的版本号m_CurVersion；
（2）下载读取服务器列表：ServerInfo配置表，
（3）对ServerInfo的GameVersions进行遍历筛选，
gameVersion.Version==m_CurVersion的游戏版本，即为当前游戏版号m_GameVersion
（4）并用m_HotFixDic记录m_GameVersion里的所有热更包Patchs的信息；

2、是否热更：否：进入游戏（加载热更）；是：下载热更
根据m_HotFixDic里记载的Patchs信息，判断是否进行热更、热更的途径，以及后续热更资源加载。
（1）首次热更时，当前服务器列表存在的话，拷贝替换到本地服务器列表信息里；
（2）当游戏再次进入时，对比以往本地的配置表信息和服务器列表信息，辅助判断是否需要进行热更，确定下载哪些文件；
后续还会进行文件校验，进一步判断是否需要下载资源。
（3）计算要下载的资源，并把要下载的资源加入下载列表DownLoadList里去；
下载的资源，取最后的patch包，注意区分平台下载。

3、下载热更：文件校验
计算资源大小，方便下载时显示需要下载多少资源，已下载多少资源，以及下载速度等信息；
根据Patch记录的信息，获取AB资源的下载路径；
进行下载热更资源：StartDownLoadAB()、DownloadAssetBundle()、

4、文件校验：错误：下载热更；正确：进入游戏加载热更
下载完下载列表里的资源后，
（1）进一步比较：服务器上文件的MD5码，与本地下载的资源生成的MD5是否一致；
即VerifyMD5，来进行文件校验，来确定是否重新下载文件。
（2）重新下载：有下载次数限制，超过下载次数进行提示

5、进入游戏加载热更
下载的文件存到本地DownLoad目录下。
在游戏运行加载时，根据ab包计算，判断是否是热更ab包，若是热更ab包进行热更路径加载